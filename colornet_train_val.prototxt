name: "Colornet"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
	  mirror: 1
    crop_size: 227
    mean_file: "../convert_leveldb/leveldb_backup/0508_256/vehcolor_mean_train.binaryproto"
  }
  data_param {
    source: "../convert_leveldb/leveldb_backup/0508_256/vehcolor_train_leveldb"
    batch_size: 72    
	backend: LEVELDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 227
    mean_file: "../convert_leveldb/leveldb_backup/0508_256/vehcolor_mean_val.binaryproto"
  }
  data_param {
    source: "../convert_leveldb/leveldb_backup/0508_256/vehcolor_val_leveldb"
    batch_size: 72 #not *iter_size
    backend: LEVELDB
  }
}

#subNet1
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  convolution_param {
    num_output: 48
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "pool1_1"
  type: "Pooling"
  bottom: "conv1_1"
  top: "pool1_1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1_1"
  top: "conv2_1"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "pool2_1"
  type: "Pooling"
  bottom: "conv2_1"
  top: "pool2_1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2_1"
  top: "conv3_1"
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "pool1_1"
  top: "conv2_2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2_2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2_2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "pool2_2"
  top: "conv3_2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv2_sub1/concat"
  type: "Concat"
  bottom: "conv3_1"
  bottom: "conv3_2"
  top: "conv2_sub1/concat"
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "conv2_sub1/concat"
  top: "conv4_1"
  convolution_param {
    num_output: 96
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv2_sub1/concat"
  top: "conv4_2"
  convolution_param {
    num_output: 96
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}








layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv5_1"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "pool5_1"
  type: "Pooling"
  bottom: "conv5_1"
  top: "pool5_1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv5_2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "pool5_2"
  type: "Pooling"
  bottom: "conv5_2"
  top: "pool5_2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}











#subNet2
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "data"
  top: "conv1_2"
  convolution_param {
    num_output: 48
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1_2"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1_2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2_3"
  type: "Convolution"
  bottom: "pool1_2"
  top: "conv2_3"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv2_3"
  type: "ReLU"
  bottom: "conv2_3"
  top: "conv2_3"
}
layer {
  name: "pool2_3"
  type: "Pooling"
  bottom: "conv2_3"
  top: "pool2_3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "pool2_3"
  top: "conv3_3"
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "conv2_4"
  type: "Convolution"
  bottom: "pool1_2"
  top: "conv2_4"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv2_4"
  type: "ReLU"
  bottom: "conv2_4"
  top: "conv2_4"
}
layer {
  name: "pool2_4"
  type: "Pooling"
  bottom: "conv2_4"
  top: "pool2_4"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3_4"
  type: "Convolution"
  bottom: "pool2_4"
  top: "conv3_4"
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv3_4"
  type: "ReLU"
  bottom: "conv3_4"
  top: "conv3_4"
}
layer {
  name: "conv2_sub2/concat"
  type: "Concat"
  bottom: "conv3_3"
  bottom: "conv3_4"
  top: "conv2_sub2/concat"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv2_sub2/concat"
  top: "conv4_3"
  convolution_param {
    num_output: 96
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "conv4_4"
  type: "Convolution"
  bottom: "conv2_sub2/concat"
  top: "conv4_4"
  convolution_param {
    num_output: 96
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv4_4"
  type: "ReLU"
  bottom: "conv4_4"
  top: "conv4_4"
}










layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv4_3"
  top: "conv5_3"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "pool5_3"
  type: "Pooling"
  bottom: "conv5_3"
  top: "pool5_3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv5_4"
  type: "Convolution"
  bottom: "conv4_4"
  top: "conv5_4"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu_conv5_4"
  type: "ReLU"
  bottom: "conv5_4"
  top: "conv5_4"
}
layer {
  name: "pool5_4"
  type: "Pooling"
  bottom: "conv5_4"
  top: "pool5_4"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}





#concat to fc layers
layer {
  name: "conv5/concat"
  type: "Concat"
  bottom: "pool5_1"
  bottom: "pool5_2"
  bottom: "pool5_3"
  bottom: "pool5_4"
  top: "conv5/concat"
}







layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "conv5/concat"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 15
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
